function   helpserv(PlotTitle)
% Services mouse-motion interrupts when HELP is enabled.

% The following copyrighted m-files comprise the PZGUI tool:
%    ** The contents of these files may not be included **
%    **  in any other program without explicit written  **
%    **    consent from the author, Mark A. Hopkins     **
%     bodepl.m        pzg_bodex.m     pzg_islink.m     pzg_seltxt.m
%     contents.m      pzg_box.m       pzg_islogx.m     pzg_tools.m
%     contourpl.m     pzg_c2d.m       pzg_isunwrp.m    pzg_tpwr.m
%     dpzgui.m        pzg_cntr.m      pzg_lims.m       pzg_txan.m
%     dupdatep.m      pzg_cphndl.m    pzg_menu.m       pzg_unre.m
%     figopts.m       pzg_d2c.m       pzg_moda.m       pzg_unwrap.m
%     fr_disp.m       pzg_disab.m     pzg_onoff.m      pzg_updtfilt.m
%     freqserv.m      pzg_efmt.m      pzg_pfesim.m     pzg_xtrfrq.m
%     gainfilt.m      pzg_err.m       pzg_prvw.m       pzgcalbk.m
%     helpserv.m      pzg_errvis.m    pzg_ptr.m        pzgui.m
%     ldlgfilt.m      pzg_fndo.m      pzg_recovr.m     pzmvserv.m
%     nicholpl.m      pzg_gle.m       pzg_reptxt.m     resppl.m
%     nyqistpl.m      pzg_grid.m      pzg_res.m        rlocuspl.m
%     pidfilt.m       pzg_inzpk.m     pzg_rsppfe.m     sensplot.m
%     pz_move.m       pzg_isdby.m     pzg_rss.m        updatepl.m
%     pzg_bkup.m      pzg_ishzx.m     pzg_scifmt.m     updtpzln.m
%                                     pzg_sclpt.m      zmimntcpt.m
% (c) 1996 - 2014
%    by Professor Mark A. Hopkins, Ph.D.
%       Electrical and Microelectronic Engineering
%       Rochester Institute of Technology
%       Rochester NY, USA 14623        Email:  mark.hopkins@rit.edu
%
% SHAREWARE INFORMATION:
%               FREE, IF USED ONLY FOR EDUCATIONAL PURPOSES.
%   Otherwise:
%    (corporations, companies, and other for-profit users) 
%    Individual licenses -- US$200 per computer
%    Site license -- US$2000 per industrial site, any number of users
%    Make check payable to "Mark A. Hopkins", and remit to address above
% ----------------------------------------------------------------------
global PZG
if isempty(PZG) && ~pzg_recovr
  return
end
evalin('base','global PZG')

if nargin ~= 1
  disp('Correct format is:  helpserv(PlotTitle)');
  return
end

if ~ischar(PlotTitle) || ( size(PlotTitle,1) ~= 1 )
  return
end

if isempty(gcbf)
  return
end
PZMAP_GUI = [ pzg_fndo(1,12,'fig_h'); pzg_fndo(2,13,'fig_h') ];
for k = numel(PZMAP_GUI):-1:1
  if ~isequal( PZMAP_GUI(k), gcbf )
    PZMAP_GUI(k) = [];
  end
end
if isempty(PZMAP_GUI)
  % Function is not being called from C-T or D-T main GUI.
  return
end

MouseLoc = get( PZMAP_GUI,'CurrentPoint');

Chldrn = get(PZMAP_GUI,'Children');
for Mk = numel(Chldrn):-1:1
  if strcmp( get(Chldrn(Mk),'type'),'uicontrol')
    if strcmp(get(Chldrn(Mk),'style'),'frame')
      Chldrn(Mk) = [];
    end
  end
end
HelpStr = '';
for Ck = 1:numel(Chldrn)
  if ~strcmpi( get( Chldrn(Ck),'tag'),'pzgui ver & rel')
    ChildPos = get( Chldrn(Ck),'Position' );
    if numel(ChildPos) == 4
      if ( MouseLoc(1) > ChildPos(1)-0.02 ) ...
        &&( MouseLoc(1) < ChildPos(1)+ChildPos(3) ) ...
        &&( MouseLoc(2) > ChildPos(2) ) ...
        &&( MouseLoc(2) < ChildPos(2)+ChildPos(4)+0.02 )
        HelpStr = get(Chldrn(Ck),'UserData');
      end
    end
  end
end

if isempty(HelpStr)
  return
end

temp0 = [];
HFig = findobj( allchild(0),'name','PZGui Help Window');
if ~isempty(HFig)
  temp0 = get( HFig,'UserData');
end

if isempty(temp0)
  if isempty(HFig)
    drawcb_h = pzg_fndo( 1,(12:13),'draw_box_checkbox');
    if ~isempty(drawcb_h)
      set(drawcb_h,'value', 0 )
    end
    HFig = figure( ...
      'Name','PZGui Help Window', ...
      'tag','PZGui Help Window', ...
      'Interruptible','on', ...
      'Color', PZG(1).DefaultBackgroundColor, ...
      'units','normalized', ...
      'Position',[0.15 0.15 0.3 0.6], ...
      'NumberTitle','off', ...
      'IntegerHandle','off', ...
      'MenuBar','none', ...
      'toolbar','none', ...
      'dockcontrols','off', ...
      'handlevisibility','callback', ...
      'deletefcn', ...
        ['global PZG,' ...
         'temp=pzg_fndo(1,12,''fig_h'');' ...
         'if ~isempty(temp),' ...
           'temp_A=get(temp,''userdata'');' ...
           'set(temp_A(9,2),''value'',0,' ...
            '''foregroundcolor'',1-get(gcbf,''color''),' ...
            '''fontweight'',''normal'');' ...
         'end,' ...
         'temp=pzg_fndo(2,13,''fig_h'');' ...
         'if ~isempty(temp),' ...
           'temp_A=get(temp,''userdata'');' ...
           'set(temp_A(9,2),''value'',0,' ...
            '''foregroundcolor'',1-get(gcbf,''color''),' ...
            '''fontweight'',''normal'');' ...
         'end,' ...
         'clear temp temp_A']);
  else
    if numel(HFig) > 1
      delete(HFig(2:end))
      HFig(2:end) = [];
    end
    delete( get(HFig,'children') )
    set( HFig, ...
      'Name','PZGui Help Window', ...
      'tag','PZGui Help Window', ...
      'Interruptible','on', ...
      'Color', PZG(1).DefaultBackgroundColor, ...
      'units','normalized', ...
      'Position',[0.15 0.15 0.3 0.6], ...
      'NumberTitle','off', ...
      'toolbar','none', ...
      'deletefcn', ...
        ['global PZG,' ...
         'temp=pzg_fndo(1,12,''fig_h'');' ...
         'if ~isempty(temp),' ...
           'temp_A=get(temp,''userdata'');' ...
           'set(temp_A(9,2),''value'',0,' ...
            '''foregroundcolor'',1-get(gcbf,''color''),' ...
            '''fontweight'',''normal'');' ...
         'end,' ...
         'temp=pzg_fndo(2,13,''fig_h'');' ...
         'if ~isempty(temp),' ...
           'temp_A=get(temp,''userdata'');' ...
           'set(temp_A(9,2),''value'',0,' ...
            '''foregroundcolor'',1-get(gcbf,''color''),' ...
            '''fontweight'',''normal'');' ...
         'end,' ...
         'clear temp temp_A']);
  end
  temp0 = zeros([10 2]);
  temp0(1,1) = ...
    uicontrol(HFig, ...
      'Style','edit', ...
      'String',HelpStr, ...
      'Max',2, ...
      'Units','normalized', ...
      'Position',[0.01 0.01 0.98 0.98], ...
      'fontsize', 12, ...
      'HorizontalAlignment','Center', ...
      'BackgroundColor',[0 0 0], ...
      'ForegroundColor',[1 1 1] );
  set( HFig,'UserData', temp0 );
  figopts('apply_default_color', HFig );
else
  set( temp0(1,1),'String', HelpStr );
end

gcbfhndl = getappdata( gcbf,'hndl');
drawcb_h = gcbfhndl.draw_box_checkbox;
if ~isempty(drawcb_h) ...
  && isequal( 1, get(drawcb_h,'value') )
  if isequal( 1, ishandle(HFig) )
    delete(HFig)
  end
  helpcb_h = ...
    [ pzg_fndo( 1,12,'pzg_help_checkbox'); ...
      pzg_fndo( 2,13,'pzg_help_checkbox') ];
  if ~isempty(helpcb_h)
    if strcmp( PZG(1).DefaultBackgroundColor,'k')
      set( helpcb_h, ...
        'value', 0, ...
        'backgroundcolor',[0 0 0], ...
        'foregroundcolor',[1 1 1] );
    else
      set( helpcb_h, ...
        'value', 0, ...
        'backgroundcolor',[1 1 1], ...
        'foregroundcolor',[0 0 0] );
    end
  end
end
  
return
