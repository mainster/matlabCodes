figChilds=[get(f2,'Children') ; get(f4,'Children')];

inc=strfind(get(figChilds(:),'type'),'axes');        % indexiere Childes vom type 'axes'
ind=find(~cellfun(@isempty,inc));            % take all children handles of all axes handle into structure

axisChilds=get(figChilds(ind),'Children')';
return

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

hh=[1 0 1 1 2 6 0 -j 2];
hh2={1 {''} 1 1 2 6 0 -j 2};

find(~arrayfun(@isempty,hh))
find(~cellfun(@isempty,hh2))
return
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for i=1:3, figure; end;

all=findall(0,'type','figure');
getWrap=@(x,y)get(x,y);

cell2mat(getWrap(all,'Position'))

return
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
syms s
di={'s+4','','s+1+j','s+1-j','1','-1','s-3','s+3-2*j','s+3+2*j','7','-3','s-3'}

ind1=cellfun(@symvar,di,'UniformOutput',false)   % Test cell di including pole symbolic 
ind2=~cellfun(@isempty,ind1)
solc=cellfun(@solve,di(ind2),'UniformOutput',false)
sold=cellfun(@eval,solc,'UniformOutput',false)
sole=cell2mat(sold)
cmpxInd=find(arrayfun(@imag, sole))
try
    SOL=[cplxpair(sole(cmpxInd)) sort(sole(reInd))] 
catch err
    SOL=[]
    disp('he error')
end

reInd=find(~arrayfun(@imag, sole))
return
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%% @@@MDB
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
syms s
di={'s+4','','s+1+j','s+1-j','1','-1','s-3'};

ind1=cellfun(@symvar,di,'UniformOutput',false)   %<----------
ind2=~cellfun(@isempty,ind1)
solc=cellfun(@solve,di(ind2),'UniformOutput',false)
sold=cellfun(@eval,solc,'UniformOutput',false)
sole=cell2mat(sold)
arrayfun(@imag, sole)

cplxpair(sole(find(arrayfun(@imag, sole)))) % Testen ob konj. komplexes polpar

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
return

ed={'s+4','','s+1+j','s+1-j','1','-1','s-3'};


cellfun(@isempty, ed)
dd=cellfun(@symvar, ed,'UniformOutput',false)



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
cc=cellfun(@symvar,ed,'UniformOutput',false)   %<----------
cellfun(@isempty,cc)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

return

clf
subplot(121)
f1=figure(1);
plot(rand(1,10));
hold all;
plot(rand(1,10));

subplot(122)

nyquist(tf([1 2],[1 3 4]));

% for q=1:5
%     buff{q}=get(hpoedit(q),'String');
% end

load('funcStruc')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
all=findall(0,'type','text')
get(all(1),'String')
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
st=@(x) get(x,'String')

a.string=@(x) get(x,'String');
a.tag=@(x) get(x,'tag');

ge=@(x) symvar(x)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

a.string(all)

%s.a=@(x) arrayfun(@get,x)     % <--------------------------

%b=@(x,y) arrayfun(@(y)get,x,y)     % <--------------------------


return


S.a = @sin;  S.b = @cos;  S.c = @tan;
structfun(@(x)x(linspace(1,4,3)), S, 'UniformOutput', false)


days = {'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'};
abbrev = cellfun(@(x) x(1:3), days, 'UniformOutput', false)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
num='s+1'; den='(s+2)*(s+3)*(s+2+3*j)*(s+2-3*j)'
di={sym(num); sym(den)}
solc=cellfun(@solve,di(:),'UniformOutput',false)
sold=cellfun(@eval,solc,'UniformOutput',false)
sole=cell2mat(sold)
cmpxInd=~isempty(arrayfun(@imag, sole))
reInd=isempty(arrayfun(@imag, sole))

try
    SOL=[cplxpair(sole(cmpxInd)) sort(sole(reInd))]; 
    disp('Alle pole liegen komplex konjugiert vor')
catch err
    SOL=[];
    disp('Nicht alle pole/NS sind konjugiert komplex! --> Komplexwertiges Zeitsignal')
end  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

return

rang=@(x)[min([x{:}]);max([x{:}])]
A={ sqrt(10*(rand(2,10)-0.5)), [sqrt(10*(rand(2,10)-0.5)) sqrt(10*(rand(2,5)-0.5))] }

%min([A{:}])
hh=rang(A(:))
min(hh(1))
max(hh(2))

min(hh(2))
max(hh(1))
return

ed={'s+4','','s+1+j','s+1-j','1','s-3'};
minW=@(x,y)min(x,y)
minW([1 2 3 3], [4 2 5 0.9])

gg=rand(2,10)-0.5;
min( minW(gg(1,:),gg(2,:)) )

return 

ed={'s+4','','s+1+j','s+1-j','1','s-3'};

clf
subplot(121)
f1=figure(1);
plot(rand(1,10));
hold all;
plot(rand(1,10));

subplot(122)

nyquist(tf([1 2],[1 3 4]));

% for q=1:5
%     buff{q}=get(hpoedit(q),'String');
% end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
all=findall(0,'type','text')
get(all(1),'String')
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
str=@(x) get(x,'String')
str(all)

a.string=@(x) get(x,'String')
a.tag=@(x) get(x,'tag')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
getWrap= @(x,y)get(x,y)
cell2mat(getWrap(ha,'Position'))/ppc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


s.a=@(x) arrayfun(@get,x)     % <--------------------------

b=@(x,y) arrayfun(@(y)get,x,y)     % <--------------------------


return


S.a = @sin;  S.b = @cos;  S.c = @tan;
structfun(@(x)x(linspace(1,4,3)), S, 'UniformOutput', false)


days = {'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'};
abbrev = cellfun(@(x) x(1:3), days, 'UniformOutput', false)